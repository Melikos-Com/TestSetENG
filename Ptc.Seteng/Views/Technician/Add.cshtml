@model Ptc.Seteng.Models.TechnicianEditViewModel
@{
    ViewBag.Title = "Add";
    var attr = new { @class = "col-xs-12  col-sm-2 col-md-4  control-label" };
    var attrrequire = new { @class = "col-xs-12  col-sm-2 col-md-4  control-label  require" };
    var divattr = "col-xs-12 col-sm-12 col-md-5 ";
}



<div class="row" style="padding-bottom:2%">
    <div class="col-xs-12">
        <button class="btn-title-style cust-font-style btn-arrow-right btn-title-bgc">新增</button>
    </div>
</div>

@using (Html.BeginForm("", "", FormMethod.Post, new { @id = "updateForm", @name = "updateForm", @class = "form-horizontal", @role = "form", @enctype = "multipart/form-data" }))
{

    <div class="row">
        <div class="@divattr">
            <!--公司-->
            @TechnicianHelper.TextBoxFor(Html, m => m.CompName, new { @disabled = "disabled" }, attr)
        </div>
        <div class="@divattr">
            <!--厂商-->
            @TechnicianHelper.TextBoxFor(Html, m => m.VendorName, new { @disabled = "disabled" }, attr)
        </div>


    </div>

    <div class="row">
        <div class="@divattr">
            <!--账号-->
            @TechnicianHelper.TextBoxFor(Html, m => m.Account, null, attrrequire)
        </div>
        <div class="@divattr">
            <!--姓名-->
            @TechnicianHelper.TextBoxFor(Html, m => m.Name, null, attrrequire)
        </div>
    </div>

    <div class="row">

        <div class="@divattr">
            <!--密码-->
            @TechnicianHelper.TextBoxFor(Html, m => m.Password, new { @style = "width: 100%", @type = "password" }, attrrequire)
        </div>

        <div class="@divattr">
            <!--是否启用-->
            @TechnicianHelper.RadioButtonFor(Html, x => x.Enable, null, attrrequire)
        </div>
    </div>

    <div class="row">

        <div class="@divattr">
            <!--确认新密码-->
            @TechnicianHelper.PasswordFor(Html, m => m.NewPassword, new { @style = "width: 100%" }, attrrequire)
        </div>

        <div class="@divattr">
            <!--角色-->
            @TechnicianHelper.RadioButtonFor(Html, x => x.IsVendor, null, attrrequire , "技師主管", "技師")
        </div>
    </div>


}

<!--按钮区块-->
<div class="row">
    <div class="col-xs-12 text-center">
        <button type="button" class="btn-search btn-sm AuthRead" id="saveBtn" name="saveBtn" onclick="SubmitBtn()">新增</button>
        <button type="button" class="btn-search btn-sm AuthRead" id="backBtn" name="backBtn" onclick="javascript:location.replace('@Url.Action("Index", "Technician")');">返回</button>
    </div>
</div>

@section scripts{

    <!--on page init-->
    <script type="text/javascript">

        jQuery(function ($) {
            window.PTC.Loading(true);

            InitValidation();       //前端验证

            ControlSwitch();        //控件开关

            window.PTC.Loading(false);
        });
    </script>

    <!--Control switch -->
    <script type="text/javascript">

        function ControlSwitch() {

            $("#Enable").prop("checked", true);          //預設啟用

            $("#IsVendor").prop("checked", false);          //預設技師
        }
    </script>
    <!-- 送出查询 -->
    <script type="text/javascript">

        function SubmitBtn() {

            debugger;
            if (!$("#updateForm").valid()) { return; }  //前端验证

            //組合對象
            var data = new FormData();


            data.append("Account", $('#Account').val());                    //帳號
            data.append("Password", $('#Password').val());                  //密碼
            data.append("Name", $('#Name').val());                          //姓名
            data.append("Enable", $('#Enable:checked').val());              //账号启用
            data.append("IsVendor", $('#IsVendor:checked').val());          //

            data.append("VenderCd", '@Model.VenderCd');                     //厂商
            data.append("CompCd", '@Model.CompCd');                        //公司

            var url = '@Url.Action("Added", "Technician")';

            window.PTC.Loading(true);
            $.ajax({
                url: url,
                data: data,
                contentType: false,
                processData: false,
                type: 'POST',
                success: function (data) {

                    var result = data.Data

                    if (result.IsSuccess) {
                        window.PTC.alertInfo(result.Message)

                        setTimeout(function () {
                            window.location.reload();
                        }, 4000);
                        window.PTC.Loading(false);
                        return;
                    }
                    else {
                        window.PTC.alertInfo(result.Message);
                        setTimeout(function () {
                            $(".alert").remove();
                            swal.closeModal(true);
                        }, 4000);

                        window.PTC.Loading(false);
                        return;
                    }
                },
                error: function (xhr, ajaxOptions, thrownError) {

                    window.PTC.alertInfo(thrownError);
                    window.PTC.Loading(false);
                }

            });
        }
    </script>
    <!--init Validation-->
    <script type="text/javascript">

        function InitValidation() {

            $('#updateForm').PTCValidation(
            {
                rules: {
                    Name: { required: true, maxlength: 20, noSpace: true },
                    Password: { required: true, maxlength: 40, alphabetnumber: true, noSpace: true },
                    NewPassword: { required: true, maxlength: 40, equalTo: "#Password", alphabetnumber: true },
                    Account: { required: true, maxlength: 20, alphabetnumber: true, }
                },

            });
        }

    </script>

}
