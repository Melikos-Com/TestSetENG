@model Ptc.Seteng.Models.TechnicianListDetailViewModel

@{
    var title = "检视技師";

    var attr = new { @class = "col-xs-12  col-sm-2 col-md-4  control-label" };
    var attrrequire = new { @class = "col-xs-12  col-sm-2 col-md-4  control-label  require" };
    var divattr = "col-xs-12 col-sm-12 col-md-5 ";
}

@**** 查询条件 ****@
<div class="row">
    <div class="col-xs-12">
        <button class="btn-title-style cust-font-style btn-arrow-right btn-title-bgc">@title</button>
    </div>
</div>
@using (Html.BeginForm("Detail", "TechnicianList", FormMethod.Post, new { @id = "modifyForm", @name = "modifyForm", @class = "form-horizontal", @role = "form", @enctype = "multipart/form-data" }))
{

<div class="row">
    <div class="@divattr">
        <!--公司-->
        <div class="row">
            <div class="col-xs-12  col-sm-12 col-lg-12">
                <div class="form-group">
                    <label class="@attr">公司名稱</label>
                    <div class="col-xs-12  col-sm-8 col-md-8">
                        @Html.TextBoxFor(x => x.CompName, new { @disabled = "disabled" })
                    </div>
                    <div class="col-xs-offset-0  col-sm-2 col-md-2"></div>
                </div>
            </div>
        </div>
    </div>
    <div class="@divattr">
        <!--厂商-->
        <div class="row">
            <div class="col-xs-12  col-sm-12 col-lg-12">
                <div class="form-group">
                    <label class="@attr">厂商名稱</label>
                    <div class="col-xs-12  col-sm-8 col-md-8">
                        @Html.TextBoxFor(x => x.VenderName, new { @disabled = "disabled" })
                    </div>
                    <div class="col-xs-offset-0  col-sm-2 col-md-2"></div>
                </div>
            </div>
        </div>
    </div>
</div>

<div class="row">
    <div class="@divattr">
        <!--账号-->
        <div class="row">
            <div class="col-xs-12  col-sm-12 col-lg-12">
                <div class="form-group">
                    <label class="@attr">账号</label>
                    <div class="col-xs-12  col-sm-8 col-md-8">
                        @Html.TextBoxFor(x => x.Account, new { @disabled = "disabled" })
                    </div>
                    <div class="col-xs-offset-0  col-sm-2 col-md-2"></div>
                </div>
            </div>
        </div>
        <!--电话-->
        <div class="row">
            <div class="col-xs-12  col-sm-12 col-lg-12">
                <div class="form-group">
                    <label class="@attr">电话</label>
                    <div class="col-xs-12  col-sm-8 col-md-8">
                        @Html.TextBoxFor(x => x.Phone, new { @disabled = "disabled" })
                    </div>
                    <div class="col-xs-offset-0  col-sm-2 col-md-2"></div>
                </div>
            </div>
        </div>
    </div>
    <div class="@divattr">
        <!--姓名-->
        <div class="row">
            <div class="col-xs-12  col-sm-12 col-lg-12">
                <div class="form-group">
                    <label class="@attr">技師姓名</label>
                    <div class="col-xs-12  col-sm-8 col-md-8">
                        @Html.TextBoxFor(x => x.Name, new { @disabled = "disabled" })
                    </div>
                    <div class="col-xs-offset-0  col-sm-2 col-md-2"></div>
                </div>
            </div>
        </div>
    </div>
</div>

<div class="row" id="filegroup">
    <div class="@divattr">
        <!--证件照-->
        <div id="FileStickersPath">
            <div class="col-xs-12  col-sm-12 col-md-12">
                <div class="form-group">
                    <label class="col-xs-12 col-sm-2 col-md-4 control-label ">@Html.DisplayNameFor(x => x.StickersPath)</label>
                    <div class="col-xs-12  col-sm-8 col-md-8">
                        <input id="StickersfileInput" name="StickersfileInput" type="file" multiple class="file-loading">
                    </div>
                    <div class="col-xs-offset-0  col-sm-2 col-md-2"></div>
                </div>
            </div>
        </div>
    </div>

    <div class="@divattr">
        <!--身分证复印件-->
        <div>
            <div class="col-xs-12  col-sm-12 col-md-12">
                <div class="form-group">
                    <label class="col-xs-12 col-sm-2 col-md-4 control-label ">@Html.DisplayNameFor(x => x.TechniciansPath)</label>
                    <div class="col-xs-12  col-sm-8 col-md-8">
                        <input id="TechniciansfileInput" name="TechniciansfileInput" type="file" multiple class="file-loading">
                    </div>
                    <div class="col-xs-offset-0  col-sm-2 col-md-2"></div>
                </div>
            </div>
        </div>
    </div>

    <div class="col-md-10">
        <!--技能证书-->
        <div>
            <div class="col-xs-12  col-sm-12 col-md-12">
                <div class="form-group">
                    <label class="col-xs-12 col-sm-2 col-md-2 control-label ">@Html.DisplayNameFor(x => x.LicenselmgPath)</label>
                    <div class="col-xs-12  col-sm-8 col-md-10">
                        <input id="LicensefileInput" name="LicensefileInput" type="file" multiple class="file-loading">
                    </div>

                </div>
            </div>
        </div>
    </div>
</div>

<div class="row">

    <div class="@divattr">
        <div class="col-xs-12  col-sm-12 col-lg-12">
            <div class="form-group">
                <label class="@attr require">审核结果</label>
                <div class="col-xs-12  col-sm-8 col-md-8">
                    @{
                        switch (Model.IsHQCheck)
                        {
                            case (int)HQCheckKind.WaitCheck:
                                @Html.Label("待审核", new { @class = "control-label" })
                                break;
                            case (int)HQCheckKind.Passed:
                                @Html.Label("审核通过", new { @class = "control-label" })
                                break;
                            case (int)HQCheckKind.Retreat:
                                @Html.Label("未通过", new { @class = "control-label" })
                                break;
                        }
                    }
                </div>
                <div class="col-xs-offset-0  col-sm-2 col-md-2"></div>
            </div>
        </div>
    </div>
</div>

<div class="row" id="Switch">
    <div class="@divattr">
        <div class="col-xs-12  col-sm-12 col-lg-12">
            <div class="form-group">
                <label class="@attr require">未通过原因</label>
                <div class="col-xs-12  col-sm-8 col-md-8">
                    @Html.TextAreaFor(x => x.IsHQCheckRemark)
                </div>
                <div class="col-xs-offset-0  col-sm-2 col-md-2"></div>
            </div>
        </div>
    </div>
</div>
<!--分隔线-->
<div class="split-line"></div>
}
<!--返回按钮-->
<div class="row">
    <div class="col-xs-12 btn-footer center">
        <input type="button" class="btn-search btn-sm" onclick="javascript:location.replace('@Url.Action("Index", "TechnicianList")');" id="back" name="back" value="返回" />
    </div>
</div>

@section scripts{
    <script src="~/Scripts/PTC/PTCValidation.js"></script>
    <!--element switch-->
    <script type="text/javascript">
                jQuery(function ($) {

                    window.PTC.Loading(true);

                    InitFileInput();      //证件照

                    Loadpage();

                    window.PTC.Loading(false);
                });

    </script>
    <!--element switch-->
    <script type="text/javascript">

                function Loadpage() {

                    $(".input-group-btn").hide();
                    //刪除(刪除图片)按钮
                    $("#filegroup :button").each(function() {
                        if(this.title == "Remove file")
                            $(this).remove();
                    });

                    $("input[type=radio][name=IsHQCheck]").prop("disabled", true);
                    $("#IsHQCheckRemark").prop("disabled", true);

                    if($("#IsHQCheckRemark").val() !=null && $("#IsHQCheckRemark").val() != '')
                        $("#Switch").show();
                    else
                        $("#Switch").hide();

                }
    </script>
    <!--init fileInput-->
    <script type="text/javascript">

        function InitFileInput()
        {
            bindfileinput($('#TechniciansfileInput'),@Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(Model.TechniciansPath)),1)
            bindfileinput($('#StickersfileInput'),@Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(Model.StickersPath)),1)
            bindfileinput($('#LicensefileInput'),@Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(Model.LicenselmgPath)),5)
        }

        function bindfileinput(id,img,filecount)
        {
            var showimg = FileGet(img);
            var imgstyle = {
                image: {width: "100%", height: "80px"},
            }
            var zooimgstyle = {
                image: {width: "100%", height: "100%", 'max-width': "100%",'max-height': "100%"},
            }
            $(id).PTCFileInput(
            {
                initialPreview: showimg.initialPreview,
                initialPreviewConfig: showimg.initialPreviewConfig,
                allowedFileExtensions: ["GIF", "JPEG", "TIFF", "PCX", "PNG", "JPG"],
                maxFileCount: filecount,
                maxFileSize: 2048,
                previewSettings: imgstyle,
                previewZoomSettings: zooimgstyle
            });
        }
        //Img
        function FileGet(Path)
        {
            var modelPath = Path || [];
            var deleteUrl = '@Url.Action("DeleteImage", "Technician")';
            var initialPreview = [];
            var initialPreviewConfig = [];
            if (modelPath){

                modelPath.forEach(function(val,index,array) {
                    initialPreview.push(val);
                    initialPreviewConfig.push({url:deleteUrl+"?Account="+$('#Account').val()+"&VenderCd="+'@Model.VenderCd'+"&CompCd="+'@Model.CompCd'+"&filepath="+val.split('?filePath=')[1]});
                });
            };

            var showimg =
                {
                    initialPreview : initialPreview,
                    initialPreviewConfig : initialPreviewConfig
                }
            return showimg;
        }
</script>
}
