@model Ptc.Spcc.CCEng.Models.MaterialViewModel

@{
    var title = string.Empty;

    switch (Model.AuthNodeType)
    {
        case Ptc.AspnetMvc.Authentication.AuthNodeType.Create:
            title = "新增";
            break;
        case Ptc.AspnetMvc.Authentication.AuthNodeType.Read:
            title = "瀏覽";
            break;
        case Ptc.AspnetMvc.Authentication.AuthNodeType.Edit:
            title = "編輯";
            break;
    }


}




<div class="modal-dialog" role="document">
    <div class="modal-content">
        <div class="modal-header">
            <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                <span aria-hidden="true">&times;</span>
            </button>
            <h4 class="modal-title" id="materialLabel">廠商自備零件管理[@(title)]</h4>
        </div>
        <div class="modal-body" style="overflow-x: auto">
            @using (Html.BeginForm("", "FMConfirm", FormMethod.Post, new { @id = "materialForm", @name = "materialForm", @class = "form-horizontal", @role = "form", @enctype = "multipart/form-data" }))
            {
                @Html.HiddenFor(x => x.CompCd)
                @Html.HiddenFor(x => x.Seq)
                <div class="row">
                    <div class="col-xs-12">

                        <!--row1-->
                        <div class="row">
                            <!--案件編號-->
                            <div class="col-sm-12 col-xs-12 col-md-4 col-lg-4">
                                <div class="form-group">
                                    <label class="col-xs-12 col-sm-12 col-md-4 col-lg-4 control-label">@Html.DisplayNameFor(x => x.Sn)</label>
                                    <div class="col-xs-12 col-sm-12 col-md-8 col-lg-8">
                                        @Html.TextBoxFor(x => x.Sn, new { disabled = "disabled" })
                                    </div>
                                </div>
                            </div>
                            <!--門市-->
                            <div class="col-sm-12 col-xs-12 col-md-4 col-lg-4">
                                <div class="form-group">
                                    <label class="col-xs-12 col-sm-12 col-md-4 col-lg-4 control-label">@Html.DisplayNameFor(x => x.StoreCd)</label>
                                    <div class="col-xs-12 col-sm-12 col-md-8 col-lg-8">
                                        <select id="StoreCd" name="StoreCd" class="js-data-example-ajax form-control" data-header="Select a condiment" disabled></select>
                                    </div>
                                </div>
                            </div>
                            <!--設備-->
                            <div class="col-sm-12 col-xs-12 col-md-4 col-lg-4">
                                <div class="form-group">
                                    <label class="col-xs-12 col-sm-12 col-md-4 col-lg-4 control-label">@Html.DisplayNameFor(x => x.AssetCd)</label>
                                    <div class="col-xs-12 col-sm-12 col-md-8 col-lg-8">
                                        <select id="AssetCd" name="AssetCd" class="js-data-example-ajax form-control" data-header="Select a condiment" disabled></select>

                                    </div>
                                </div>
                            </div>

                        </div>
                        <!--row2-->
                        <div class="row">
                            <!--零件編號-->
                            <div class="col-sm-12 col-xs-12 col-md-4 col-lg-4">
                                <div class="form-group">
                                    <label class="col-xs-12 col-sm-12 col-md-4 col-lg-4 control-label">@Html.DisplayNameFor(x => x.PartNo)</label>
                                    <div class="col-xs-12 col-sm-12 col-md-8 col-lg-8">
                                        <select id="PartNo" name="PartNo" class="js-data-example-ajax form-control" data-header="Select a condiment"></select>
                                    </div>
                                </div>
                            </div>
                            <!--規格-->
                            <div class="col-sm-12 col-xs-12 col-md-4 col-lg-4">
                                <div class="form-group">
                                    <label class="col-xs-12 col-sm-12 col-md-4 col-lg-4 control-label">@Html.DisplayNameFor(x => x.Spec)</label>
                                    <div class="col-xs-12 col-sm-12 col-md-8 col-lg-8">
                                        @Html.TextBoxFor(x => x.Spec, new { disabled = "disabled" })
                                    </div>
                                </div>
                            </div>
                            <!--單位-->
                            <div class="col-sm-12 col-xs-12 col-md-4 col-lg-4">
                                <div class="form-group">
                                    <label class="col-xs-12 col-sm-12 col-md-4 col-lg-4 control-label">@Html.DisplayNameFor(x => x.Unit)</label>
                                    <div class="col-xs-12 col-sm-12 col-md-8 col-lg-8">
                                        @Html.TextBoxFor(x => x.Unit, new { disabled = "disabled" })
                                    </div>
                                </div>
                            </div>

                        </div>
                        <!--row3-->
                        <div class="row">
                            <!--使用日期-->
                            <div class="col-sm-12 col-xs-12 col-md-4 col-lg-4">
                                <div class="form-group">
                                    <label class="col-xs-12 col-sm-12 col-md-4 col-lg-4 control-label">@Html.DisplayNameFor(x => x.UseDate)</label>
                                    <div class="col-xs-12 col-sm-12 col-md-8 col-lg-8">
                                        <div class="input-group">
                                            <input class="form-control date-picker mailbox-input-text wide-mailbox-input" id="UseDate" name="UseDate" type="text" value="@Model.UseDate.ToString("yyyy/MM/dd")" placeholder="使用日期" />
                                            <span class="input-group-addon" onclick="$('#UseDate').focus()">
                                                <i class="fa fa-calendar bigger-110"></i>
                                            </span>
                                        </div>
                                    </div>
                                  
                                </div>
                            </div>
                            <!--數量-->
                            <div class="col-sm-12 col-xs-12 col-md-4 col-lg-4">
                                <div class="form-group">
                                    <label class="col-xs-12 col-sm-12 col-md-4 col-lg-4 control-label">@Html.DisplayNameFor(x => x.Qty)</label>
                                    <div class="col-xs-12 col-sm-12 col-md-8 col-lg-8">
                                        @Html.TextBoxFor(x => x.Qty)
                                    </div>
                                </div>
                            </div>
                            <!--價格-->
                            <div class="col-sm-12 col-xs-12 col-md-4 col-lg-4">
                                <div class="form-group">
                                    <label class="col-xs-12 col-sm-12 col-md-4 col-lg-4 control-label">@Html.DisplayNameFor(x => x.Price)</label>
                                    <div class="col-xs-12 col-sm-12 col-md-8 col-lg-8">
                                        @Html.TextBoxFor(x => x.Price)
                                    </div>
                                </div>
                            </div>

                        </div>
                        <!--row4-->
                        <div class="center btn-footer">
                            <input type="button" class="btn-search btn-sm md-close" data-dismiss="modal" value="關閉" />
                            <input type="button" class="btn-search btn-sm md-edit" onclick="Modify('@Model.AuthNodeType')" value="@title" />
                        </div>
                    </div>
                </div>

            }

        </div>

    </div>
</div>

<!--methods-->
<script type="text/javascript">

    function Modify(type) {

        if (!$('#materialForm').valid()) { return; }

        window.PTC.Loading(true);

        var path = '';
        var obj = $('#materialForm').serializeObject();

        switch (type) {

            case '@Ptc.AspnetMvc.Authentication.AuthNodeType.Create':
                path = '@Url.Action("AddMaterial")';

                break;
            case '@Ptc.AspnetMvc.Authentication.AuthNodeType.Edit':
                path = '@Url.Action("UpdateMaterial")';

                break;
        }

        $.ajax({
            url: path,
            type: 'POST',
            dataType: 'Json',
            data: obj,
            success: function (data) {
                console.log(data);
                $('#modal-material-popup').modal('hide');
                window.PTC.Loading(false);
                window.PTC.alertInfo(data.Message)

                setTimeout(function () {
                    window.location.reload();
                }, 1000);

            },
            error: function (xhr, ajaxOptions, thrownError) {

                window.PTC.Loading(false);

                window.PTC.alertError(thrownError)

            }
        });


    }


</script>
<!--datetime-->
<script type="text/javascript">

    function InitDatePicker() {


        $("#UseDate").datetimepicker({
            language: 'fr',
            format: "YYYY/MM/DD",
            changeMonth: true,
            changeYear: true,
            todayHighlight: 'true',
            autoclose: true,
            altField: "#UseDate",
            widgetPositioning: {
                vertical: 'auto',
                horizontal: 'auto'
            }
        });

        $('.dropdown-menu').hide();
    }

</script>
<!--validate-->
<script type="text/javascript">

    function InitValidation() {
        $('#materialForm').PTCValidation({});

        $("#PartNo").rules("add", "required");
        $("#UseDate").rules("add", {
            required: true,
            date: 0,

        });
        $("#Qty").rules("add", {
            required: true,
            min: 1,
            number: true,
        });
        $("#Price").rules("add", {
            required: true,
            number: true,
        });
    }

</script>
<!--select2-->
<script type="text/javascript">
    function InitSelect2() {

        var compCd = '@Model.CompCd';
        var storeCd = '@Model.StoreCd';
        var assetCd = '@Model.AssetCd';
        var PartNo = '@Model.PartNo';

        window.PTC.Select2.Material('#PartNo', '@Url.Action("Get", "Tvprice")',
        function () {
            return {
                CompCd: $('#CompCd').val(),
                AssetCd: $('#AssetCd').val(),
            }

        })
        window.PTC.Select2.Store('#StoreCd', '@Url.Action("Get", "Tstrmst")', function () { return {}; })
        window.PTC.Select2.SingleAssets('#AssetCd', '@Url.Action("Get", "Tassets")', function () { })

        if (PartNo) {
            $('#PartNo').InitSelect2Data({

                url: '@Url.Action("Get", "Tvprice")',
                data: {
                    CompCd: compCd,
                    AssetCd: assetCd,
                    PartNo: PartNo,
                }
            })
        }

        $('#StoreCd').InitSelect2Data({

            url: '@Url.Action("Get", "Tstrmst")',
            data: {
                CompCd: compCd,
                StoreCd: storeCd,
            }
        })

        $('#AssetCd').InitSelect2Data({

            url: '@Url.Action("Get", "Tassets")',
            data: {
                CompCd: compCd,
                AssetCd: assetCd,
            }
        })

        $('#PartNo').change(function () {
            var obj = $(this).select2('data')[0];

            if (!obj) {
                $('#Spec').val('');
                $('#Unit').val('');
                $('#Price').val('');
            } else {
                $('#Spec').val(obj.addition.Spec);
                $('#Unit').val(obj.addition.Unit);
                $('#Price').val(obj.addition.Price);
            }

        });
    }



</script>
<!--InitUI-->
<script type="text/javascript">

    $(document).ready(function () {
        InitSelect2();
        InitDatePicker();
        InitValidation();
    });


    if ('@Model.AuthNodeType' == '@Ptc.AspnetMvc.Authentication.AuthNodeType.Read') {
        $('#materialForm input').not(".md-close").prop('disabled', true);
        $('#materialForm select').prop('disabled', true);
        $('.md-edit').hide();
    }

    

</script>