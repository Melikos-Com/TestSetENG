@model Ptc.Spcc.CCEng.Models.TechnicianListDetailViewModel

<style>
    textarea {
        max-width: 500px;
        max-height: 200px;
        width: 500px;
        height: 200px;
        margin: 5px;
    }

    .require {
        color: #d80000;
    }
      img {
        max-height:200px;
         max-width:100%;
    }
 
</style>
@{
    var title = "检视技师";

    var attr = new { @class = "col-xs-12  col-sm-2 col-md-4  control-label" };
    var attrrequire = new { @class = "col-xs-12  col-sm-2 col-md-4  control-label  require" };
    var divattr = "col-xs-12 col-sm-12 col-md-5 ";
}

@**** 查询条件 ****@
<div class="row">
    <div class="col-xs-12">
        <button class="btn-title-style cust-font-style btn-arrow-right btn-title-bgc">@title</button>
    </div>
</div>
@using (Html.BeginForm("Detail", "TechnicianList", FormMethod.Post, new { @id = "modifyForm", @name = "modifyForm", @class = "form-horizontal", @role = "form", @enctype = "multipart/form-data" }))
{

<div class="row">
    <div class="@divattr">
        <!--公司-->
        <div class="row">
            <div class="col-xs-12  col-sm-12 col-lg-12">
                <div class="form-group">
                    <label class="@attr">公司名称</label>
                    <div class="col-xs-12  col-sm-8 col-md-8">
                        @Html.TextBoxFor(x => x.CompName, new { @disabled = "disabled" })
                    </div>
                    <div class="col-xs-offset-0  col-sm-2 col-md-2"></div>
                </div>
            </div>
        </div>
    </div>
    <div class="@divattr">
        <!--厂商-->
        <div class="row">
            <div class="col-xs-12  col-sm-12 col-lg-12">
                <div class="form-group">
                    <label class="@attr">厂商名称</label>
                    <div class="col-xs-12  col-sm-8 col-md-8">
                        @Html.TextBoxFor(x => x.VenderName, new { @disabled = "disabled" })
                    </div>
                    <div class="col-xs-offset-0  col-sm-2 col-md-2"></div>
                </div>
            </div>
        </div>
    </div>
</div>

<div class="row">
    <div class="@divattr">
        <!--账号-->
        <div class="row">
            <div class="col-xs-12  col-sm-12 col-lg-12">
                <div class="form-group">
                    <label class="@attr">账号</label>
                    <div class="col-xs-12  col-sm-8 col-md-8">
                        @Html.TextBoxFor(x => x.Account, new { @disabled = "disabled" })
                    </div>
                    <div class="col-xs-offset-0  col-sm-2 col-md-2"></div>
                </div>
            </div>
        </div>
        <!--电话-->
        <div class="row">
            <div class="col-xs-12  col-sm-12 col-lg-12">
                <div class="form-group">
                    <label class="@attr">电话</label>
                    <div class="col-xs-12  col-sm-8 col-md-8">
                        @Html.TextBoxFor(x => x.Phone, new { @disabled = "disabled" })
                    </div>
                    <div class="col-xs-offset-0  col-sm-2 col-md-2"></div>
                </div>
            </div>
        </div>
    </div>
    <div class="@divattr">
        <!--姓名-->
        <div class="row">
            <div class="col-xs-12  col-sm-12 col-lg-12">
                <div class="form-group">
                    <label class="@attr">技师姓名</label>
                    <div class="col-xs-12  col-sm-8 col-md-8">
                        @Html.TextBoxFor(x => x.Name, new { @disabled = "disabled" })
                    </div>
                    <div class="col-xs-offset-0  col-sm-2 col-md-2"></div>
                </div>
            </div>
        </div>
    </div>
</div>

<div class="row" id="filegroup">
    <div class="@divattr">
        <!--证件照-->
        <div class="row" id="FileStickersPath">
            <div class="col-xs-12  col-sm-12 col-lg-12">
                <div class="form-group">
                    <label class="@attr ">@Html.DisplayNameFor(x => x.StickersPath)</label>
                    <div class="col-xs-12  col-sm-8 col-md-8">
                        <input id="PhotofileInput" name="PhotofileInput" type="file" multiple class="file-loading">
                    </div>
                    <div class="col-xs-offset-0  col-sm-2 col-md-2"></div>
                </div>
            </div>
        </div>
    </div>
    <div class="@divattr">
        <!--身分证复印件-->
        <div class="row">
            <div class="col-xs-12  col-sm-12 col-lg-12">
                <div class="form-group">
                    <label class="@attr ">@Html.DisplayNameFor(x => x.TechniciansPath)</label>
                    <div class="col-xs-12  col-sm-8 col-md-8">
                        <input id="fileInput" name="fileInput" type="file" multiple class="file-loading">
                    </div>
                    <div class="col-xs-offset-0  col-sm-2 col-md-2"></div>
                </div>
            </div>
        </div>
    </div>
    <div class="col-md-10">
        <!--技能证书-->
        <div class="row">
            <div class="col-xs-12  col-sm-12 col-lg-12">
                <div class="form-group">
                    <label class="col-xs-12 col-sm-2 col-md-2 control-label ">@Html.DisplayNameFor(x => x.LicenselmgPath)</label>
                    <div class="col-xs-12  col-sm-8 col-md-10">
                        <input id="LicensefileInput" name="LicensefileInput" type="file" multiple class="file-loading">
                    </div>
                    <div class="col-xs-offset-0  col-sm-2 col-md-2"></div>
                </div>
            </div>
        </div>
    </div>
</div>

<div class="row">

    <div class="@divattr">
        <div class="col-xs-12  col-sm-12 col-lg-12">
            <div class="form-group">
                <label class="@attr require">审核结果</label>
                <div class="col-xs-12  col-sm-8 col-md-8">
                    @{
                        switch (Model.IsHQCheck)
                        {
                            case (int)HQCheckKind.WaitCheck:
                                @Html.Label("待审核", new { @class = "control-label" })
                                break;
                            case (int)HQCheckKind.Passed:
                                @Html.Label("审核通过", new { @class = "control-label" })
                                break;
                            case (int)HQCheckKind.Retreat:
                                @Html.Label("未通过", new { @class = "control-label" })
                                break;
                        }
                    }
                </div>
                <div class="col-xs-offset-0  col-sm-2 col-md-2"></div>
            </div>
        </div>
    </div>
</div>

<div class="row" id="Switch">
    <div class="@divattr">
        <div class="col-xs-12  col-sm-12 col-lg-12">
            <div class="form-group">
                <label class="@attr require">未通过原因</label>
                <div class="col-xs-12  col-sm-8 col-md-8">
                    @Html.TextAreaFor(x => x.IsHQCheckRemark)
                </div>
                <div class="col-xs-offset-0  col-sm-2 col-md-2"></div>
            </div>
        </div>
    </div>
</div>
<!--分隔线-->
<div class="split-line"></div>
}
<!--返回按钮-->
<div class="row">
    <div class="col-xs-12 btn-footer center">
        <input type="button" class="btn-search btn-sm" onclick="history.back()" id="back" name="back" value="返回" />
    </div>
</div>

@section scripts{
    <script src="~/Scripts/PTC/PTCValidation.js"></script>
    <!--element switch-->
    <script type="text/javascript">
                jQuery(function ($) {


                    InitFileInput();      //证件照

                    InitPhotoFileInput(); //大头贴

                    InitLicenseFileInput(); //技能证书

                    Loadpage();
                });

    </script>
    <!--element switch-->
    <script type="text/javascript">

                function Loadpage() {

                    $(".input-group-btn").hide();
                    //删除(删除图片)按钮
                    $("#filegroup :button").each(function() {
                        if(this.title == "Remove file")
                            $(this).remove();
                    });

                    $("input[type=radio][name=IsHQCheck]").prop("disabled", true);
                    $("#IsHQCheckRemark").prop("disabled", true);

                    if($("#IsHQCheckRemark").val() !=null && $("#IsHQCheckRemark").val() != '')
                        $("#Switch").show();
                    else
                        $("#Switch").hide();

                }
    </script>
    <!--init fileInput-->
    <script type="text/javascript">
        var imgstyle = {
            image: {width: "100%", height: "auto"},
        }
        var zooimgstyle = {
            image: {width: "100%", height: "100%", 'max-width': "100%",'max-height': "100%"},
        }
        function InitFileInput()
        {
            var modelPath =@Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(Model.TechniciansPath)) || [];
            var deleteUrl = '@Url.Action("DeleteImage", "Technician")';
            var initialPreview = [];
            var initialPreviewConfig = [];
            if (modelPath){

                modelPath.forEach(function(val,index,array) {
                    initialPreview.push(val);
                    initialPreviewConfig.push({url:deleteUrl+"?Account="+$('#Account').val()+"&VenderCd="+'@Model.VenderCd'+"&CompCd="+'@Model.CompCd'+"&filepath="+val.split('?filePath=')[1]});

                });


            };


            $("#fileInput").fileinput({
                initialPreviewAsData: true,
                overwriteInitial: true,
                initialPreview: initialPreview,
                initialPreviewConfig:initialPreviewConfig,
                allowedFileExtensions: ["GIF", "JPEG", "TIFF", "PCX", "PNG", "JPG"],
                maxFilePreviewSize: 10240,
                maxFileSize: 2048,
                msgSizeTooLarge:'档案 "{name}" ({size} KB) 超过允许 {maxSize} KB. 请重新上传!',
                maxFileCount:1,
                msgFilesTooMany:"选择上传的文件数量({n}) 超过允许的最大数值{m}！",
                deleteUrl: '',
                browseClass: "btn",
                uploadClass: "btn btn-file",
                removeClass: "btn btn-file",
                showUpload: false,
                showRemove: false,
                uploadAsync: false,
                previewSettings :imgstyle,
                previewZoomSettings :zooimgstyle,
            });
        }

        function InitPhotoFileInput()
        {
            var modelPath =@Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(Model.StickersPath)) || [];
            var deleteUrl = '@Url.Action("DeleteImage", "Technician")';
            var initialPreview = [];
            var initialPreviewConfig = [];
            if (modelPath){

                modelPath.forEach(function(val,index,array) {
                    initialPreview.push(val);
                    initialPreviewConfig.push({url:deleteUrl+"?Account="+$('#Account').val()+"&VenderCd="+'@Model.VenderCd'+"&CompCd="+'@Model.CompCd'+"&filepath="+val.split('?filePath=')[1]});
                });
            };

            $("#PhotofileInput").fileinput({
                initialPreviewAsData: true,
                overwriteInitial: true,
                initialPreview: initialPreview,
                initialPreviewConfig:initialPreviewConfig,
                allowedFileExtensions: ["GIF", "JPEG", "TIFF", "PCX", "PNG", "JPG"],
                maxFilePreviewSize: 10240,
                maxFileCount:1,
                maxFileSize: 2048,
                msgSizeTooLarge:'档案 "{name}" ({size} KB) 超过允许 {maxSize} KB. 请重新上传!',
                msgFilesTooMany:"选择上传的文件数量({n}) 超过允许的最大数值{m}！",
                deleteUrl: '',
                browseClass: "btn",
                uploadClass: "btn btn-file",
                removeClass: "btn btn-file",
                showUpload: false,
                showRemove: false,
                uploadAsync: false,
                previewSettings :imgstyle,
                previewZoomSettings :zooimgstyle,
            });

        }

        function InitLicenseFileInput()
        {
            var modelPath =@Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(Model.LicenselmgPath)) || [];
            var deleteUrl = '@Url.Action("DeleteImage", "Technician")';
            var initialPreview = [];
            var initialPreviewConfig = [];
            if (modelPath){

                modelPath.forEach(function(val,index,array) {
                    initialPreview.push(val);
                    initialPreviewConfig.push({url:deleteUrl+"?Account="+$('#Account').val()+"&VenderCd="+'@Model.VenderCd'+"&CompCd="+'@Model.CompCd'+"&filepath="+val.split('?filePath=')[1]});
                });
            };

            $("#LicensefileInput").fileinput({
                initialPreviewAsData: true,
                overwriteInitial: true,
                initialPreview: initialPreview,
                initialPreviewConfig:initialPreviewConfig,
                allowedFileExtensions: ["GIF", "JPEG", "TIFF", "PCX", "PNG", "JPG"],
                maxFilePreviewSize: 8192,
                maxFileCount:5,
                maxFileSize: 2048,
                msgSizeTooLarge:'档案 "{name}" ({size} KB) 超过允许 {maxSize} KB. 请重新上传!',
                msgFilesTooMany:"选择上传的文件数量({n}) 超过允许的最大数值{m}！",
                deleteUrl: '',
                browseClass: "btn",
                uploadClass: "btn btn-file",
                removeClass: "btn btn-file",
                showUpload: false,
                showRemove: false,
                uploadAsync: false,
                previewSettings :imgstyle,
                previewZoomSettings :zooimgstyle,
            });

        }





</script>
}
